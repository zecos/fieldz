[{"/home/zwhitchcox/dev/zecos/fieldz/test-app/src/index.tsx":"1","/home/zwhitchcox/dev/zecos/fieldz/test-app/src/reportWebVitals.ts":"2","/home/zwhitchcox/dev/zecos/fieldz/test-app/src/App.tsx":"3"},{"size":500,"mtime":1610152314777,"results":"4","hashOfConfig":"5"},{"size":425,"mtime":1610152314777,"results":"6","hashOfConfig":"5"},{"size":832,"mtime":1610400217811,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"gjh2xo",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"10"},"/home/zwhitchcox/dev/zecos/fieldz/test-app/src/index.tsx",[],["16","17"],"/home/zwhitchcox/dev/zecos/fieldz/test-app/src/reportWebVitals.ts",[],"/home/zwhitchcox/dev/zecos/fieldz/test-app/src/App.tsx",["18"],"import React, { useState } from 'react';\nimport { useText, Text, useForm } from 'fieldz'\nimport './App.scss';\n\nfunction App() {\n  const newTodo = useText({\n    name: 'newTodo',\n    validate: val => {\n      if (val.length < 3) {\n        return \"Must be at least 3 characters long.\"\n      }\n    },\n  })\n  const [todos, setTodos] = useState<string[]>([])\n  const userForm = useForm({\n    fields: []\n  })\n  return (\n    <div className=\"App\">\n      <Text {...newTodo}\n        onEnter={() => {\n          newTodo.setTouched(true)\n          if (newTodo.errors) {\n            return\n          }\n          setTodos([\n            ...todos,\n            newTodo.state\n          ])\n          newTodo.setState('')\n        }}/>\n      <ul>\n        {todos.map((todo, i) => <li key={i}>{todo}</li>)}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":15,"column":9,"nodeType":"25","messageId":"26","endLine":15,"endColumn":17},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"@typescript-eslint/no-unused-vars","'userForm' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]